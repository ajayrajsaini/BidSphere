spring.application.name=bidsphere
# ===============================
# ========== SERVER ============
# ===============================
server.port=8080

# ===============================
# ======== POSTGRESQL ==========
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/bidspheredb
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# ===============================
# =========== REDIS ============
# ===============================
spring.redis.host=localhost
spring.redis.port=6379
#
## ===============================
## =========== KAFKA ============
## ===============================
#spring.kafka.bootstrap-servers=kafka:9092
#spring.kafka.consumer.group-id=auction-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#
## Optional: Kafka topic names (custom)
#auction.kafka.topic.auction-created=auction_created
#auction.kafka.topic.bid-placed=bid_placed
#
## ===============================
## ====== LOGGING (optional) =====
## ===============================
#logging.level.org.springframework=INFO
